// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReviewForm should render 1`] = `
<Fragment>
  <WithStyles(ForwardRef(List))>
    <WithStyles(ForwardRef(ListItem))
      key="1"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={3}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        hey something's going on!
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="6"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={5}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        test the 6th comment
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="7"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={2}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        something's going on
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="8"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={2}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        tjyjfghjfghjf
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="9"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={3}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        ygfhkfjkff
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="10"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={3}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        TESTING LOADING...
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="11"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={5}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        something's going on
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="12"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={3}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        fasgfasdgasgasdgasdg
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
    <WithStyles(ForwardRef(ListItem))
      key="15"
    >
      <Styled(WithStyles(ForwardRef(ListItemAvatar)))>
        <WithStyles(ForwardRef(Rating))
          readOnly={true}
          value={4}
        />
      </Styled(WithStyles(ForwardRef(ListItemAvatar)))>
      <Styled(WithStyles(ForwardRef(ListItemText)))>
        fgsdgfdfgdgfdsdfdgs
      </Styled(WithStyles(ForwardRef(ListItemText)))>
      <WithStyles(ForwardRef(ListItemSecondaryAction))>
        <WithStyles(ForwardRef(IconButton))
          aria-label="delete"
          edge="end"
          onClick={[Function]}
        >
          <WithStyles(ForwardRef(Icon))>
            delete
          </WithStyles(ForwardRef(Icon))>
        </WithStyles(ForwardRef(IconButton))>
      </WithStyles(ForwardRef(ListItemSecondaryAction))>
    </WithStyles(ForwardRef(ListItem))>
  </WithStyles(ForwardRef(List))>
  <WithStyles(ForwardRef(TablePagination))
    backIconButtonProps={
      Object {
        "aria-label": "previous page",
      }
    }
    component="div"
    count={5}
    nextIconButtonProps={
      Object {
        "aria-label": "next page",
      }
    }
    onChangePage={[Function]}
    onChangeRowsPerPage={[Function]}
    page={1}
    rowsPerPage={5}
    rowsPerPageOptions={
      Array [
        5,
        10,
        20,
      ]
    }
  />
</Fragment>
`;

exports[`ReviewForm shouldn't render anything if data is not provided 1`] = `
<Fragment>
  <WithStyles(ForwardRef(List)) />
</Fragment>
`;
